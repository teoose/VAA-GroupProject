[
  {
    "objectID": "References/Codebook.html",
    "href": "References/Codebook.html",
    "title": "Code Book",
    "section": "",
    "text": "COMING SOON IN THE NEAR MILLENIUM!\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Decoding Chaos",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "G5_Imran/workingfile.html",
    "href": "G5_Imran/workingfile.html",
    "title": "Imran’s page",
    "section": "",
    "text": "pacman::p_load(tidyverse, leaflet, treemap, rmarkdown, highcharter, viridis,\n               ggplot2, tidyr, dplyr, viridisLite, RColorBrewer, countrycode, \n               wordcloud, tidytext, tm, plotly)\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Read the dataset\ndata &lt;- read.csv(\"data/data_filtered_analysis.csv\")\n\n# Prepare the data by grouping and summarizing\ndata_prepared &lt;- data %&gt;%\n  group_by(country_txt) %&gt;%\n  summarise(Incidents = n(),\n            Kills = sum(nkill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n# Create the bubble plot\np &lt;- ggplot(data_prepared, aes(x = Incidents, y = Kills, size = Kills, color = country_txt)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(1, 20)) + # Adjust this range based on your data to make the plot look better\n  theme_minimal() +\n  labs(title = \"Terrorism Incidents vs. Casualties by Country, 1970 - 2023\",\n       x = \"Number of Incidents\",\n       y = \"Number of Casualties\") +\n  theme(legend.position = \"none\") # Optional: Adjust or remove based on preference\n\np_interactive &lt;- ggplotly(p, tooltip = c(\"country_txt\", \"Incidents\", \"Kills\"))\n\n# Print the interactive plot\np_interactive\n\n\n\n\n\n\nggplotly(p, tooltip = c(\"country_txt\", \"Incidents\", \"Kills\"))"
  },
  {
    "objectID": "G5_Imran/workingfile.html#loading-r-package",
    "href": "G5_Imran/workingfile.html#loading-r-package",
    "title": "Imran’s page",
    "section": "",
    "text": "pacman::p_load(tidyverse, leaflet, treemap, rmarkdown, highcharter, viridis,\n               ggplot2, tidyr, dplyr, viridisLite, RColorBrewer, countrycode, \n               wordcloud, tidytext, tm, plotly)\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\n\n# Read the dataset\ndata &lt;- read.csv(\"data/data_filtered_analysis.csv\")\n\n# Prepare the data by grouping and summarizing\ndata_prepared &lt;- data %&gt;%\n  group_by(country_txt) %&gt;%\n  summarise(Incidents = n(),\n            Kills = sum(nkill, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n\n# Create the bubble plot\np &lt;- ggplot(data_prepared, aes(x = Incidents, y = Kills, size = Kills, color = country_txt)) +\n  geom_point(alpha = 0.7) +\n  scale_size(range = c(1, 20)) + # Adjust this range based on your data to make the plot look better\n  theme_minimal() +\n  labs(title = \"Terrorism Incidents vs. Casualties by Country, 1970 - 2023\",\n       x = \"Number of Incidents\",\n       y = \"Number of Casualties\") +\n  theme(legend.position = \"none\") # Optional: Adjust or remove based on preference\n\np_interactive &lt;- ggplotly(p, tooltip = c(\"country_txt\", \"Incidents\", \"Kills\"))\n\n# Print the interactive plot\np_interactive\n\n\n\n\n\n\nggplotly(p, tooltip = c(\"country_txt\", \"Incidents\", \"Kills\"))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "G5_Zach/workingfile.html",
    "href": "G5_Zach/workingfile.html",
    "title": "Working File",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "ProjectProposal/ProjectProposal.html",
    "href": "ProjectProposal/ProjectProposal.html",
    "title": "Decoding Chaos in Colours",
    "section": "",
    "text": "Authors: Imran, Suan Ern, Zachary Wong\n\n\n\nImage Source: University of Maryland\n\n\n\nMotivation\nTerrorism, especially coordinated attacks targeting innocent civilians, have been a constant in our lives, threatening the public both physically and psychologically. A good visual analysis of terrorist attacks is essential to help (1) discover global terrorism trends, (2) unveil hidden relationships among terrorist networks through their attacks and (3) ascertain the impact of fatalities and losses.\nThe team aims to use open-source data which includes information on terrorist events globally to provide easy-to-use and insightful visualisation tools that can be especially suitable for Defence and Security sectors to develop effective counter terrorism measures and strategies.\n\n\nObjectives\nThe objective of this project is to:\n\nExamine open-source data on terrorist events worldwide (The Global Terrorism Database(GTD)) and derive useful insights on the factors and conditions that may affect international terrorist incidents, and\nBuild a web-enabled interactive visual analytics application by using R Shiny based on this Global Terrorism Database (GTD).\n\n\n\nData\nThe project will examine the Global Terrorism Database™ (GTD) from University of Maryland that holds 5 decades (i.e. Year 1970 to Year 2020) of attack events that happened in 203 countries. The original dataset consists of 209,706 observations and 135 variables. Given the large dataset, the team will filter the dataset to eliminate unnecessary data to ensure quality of data used is pertinent to project objective.\n\n\nMethodology & Analytical Approach\nFor this project, the following approach will be taken by the team:\n\nData Preparation: Clean the dataset by removing irrelevant variables, filtering variables and encoding categorical variables if necessary.\n\nThe table below shows the variables that we have selected to maintain.\nFor detailed description of the variables, please refer to the Code Book in the reference section.\n\n\n\n\n\n\n\n\n\n\nExploratory Data Analysis via Data Visualisation Methods: Analyse the dataset to understand the distribution of variables, identify patterns, and explore correlation between variables. Such as using:\n\nTime-series bar/ line chart and bubble plot\nGeospatial heatmaps and hotspot maps\n\nConfirmatory Data Analysis via Statistical Methods: Analyse the dataset using statistical testing tools to test hypotheses, evaluate the findings and arguments (e.g. strength of relationships between variables) and make statistical observations under uncertainty.\n\nCorrelation test:\n\nCorrelation web plot, or\nSignificant Test of Correlation: ggscatterstats()\n\nModel Diagnostic: checking for multicollinearity\nModel Diagnostic: checking normality assumption\nOneway ANOVA Test: ggbetweenstats() method\n\n\n\n\nPrototype Sketches\nThe following sketches were drawn to conceptualise our thoughts and discussions on the layout of the Shiny app along with its various functions. \nThese will subsequently be refined as we further codify and render our graphs and application. \nThe various sections of our app consists of:- \n\nLanding page - to visually summarise the impact of Global Terrorism incidents till date \nGlobal trends- to examine the trends over time and deep dive into the nature of events \nCountry statistics - to enable users to deep dive into individual countries or regions to understand the impact of Terrorism in that locality \nDistribution analysis - to examine the Distribution of Terror events against categorical variable like nature of targets, weapons used and types of attacks \nConfirmatory Analysis - to visualise and examine/ test for relationships, associations and correlations etc \n\n\nLanding PageGlobal TrendsCountry StatisticsDistributionConfirmatory\n\n\nThis tab will serve as a “landing page” to inform and summarise the global impact till date. \nProposed key features on the page include: \n\nWorld map to identify the countries/regions most impacted and location of events, based on different colour intensity, with the use of Latitude/ Longitude variables. \nInteractivity elements will be implemented with the tooltip information such as Country, Total Counts on Attack/ Killed/ Wounded etc. \n\n\n\n\nThis tab will serve as the dashboard in the R Shiny application that will identify the most affected countries, groups with most attacks, types of weapons used, forms of attacks etc. \nProposed key features on the page include: \n\nInteractive or Animated Bubble plot that shows the most affected countries over time, with the use of time slider or play button for animated graph. \nLine chart to plot how the number of attacks, casualties, wounded have changed over time, with the use of time slider or play button for animated graph. \nBar chart to show the top terror groups. \nWord cloud to visualise the motives behind the attacks. \nWorld map to show the changes in terrorism “hotspots” over time. \nInteractivity elements will be implemented with the tooltip information such as Country, Counts on Total Attack/ Total Killed/ Total Wounded etc. \n\n\n\n\nThis tab will serve as a continuation from the ‘Global Trends’ tab.  \nProposed key features on the page include: \n\nWorld map, line/ bar chart and word cloud will show the details at regional level. \nUsers will be able to select from the dropdown list for the country/ region that they would want to examine in more detail. \n\n\n\n\nThis tab will display the distribution of Terror events based on the different categorical variables such as Target/ Weapon/ Attack/ Region etc. \nProposed key features on the page include: \n\nBar charts and ridge density plots to show the distribution of the terror events based on the different variables. \n\n\n\n\nThis tab will examine and visualise the relationships, associations and correlations of different variables. \nProposed key features on the page include: \n\nAssociation tests between categorical variables eg: ‘Modus operandi’ Vs Targets types. \nTime series seasonality test to examine if there is any seasonal element in attacks. \nStatistical test plots such as tests of correlation, multicollinearity, normality testing, etc. \n\n\n\n\n\n\n\nR Packages\nOur team intends to use the following R packages to run the R Shiny Application:\n\ntidyverse: a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\nknitr: an report generation tool.\ndplyr: an R tool for working with data frame (e.g. objects).\nggstatsplot: an extension of ggplot2 package for statistical visualisation and graphics creation.\nggdist: an R package that support visualisation of distribution and uncertainty.\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\nperformance: an R package used for assessment, comparison and testing of statistical models.\nparameters: an R package used for processing parameters of various statistical models.\nRColorBrewer: an R package that provide various colour schemes and colour palettes.\nDT: an R interface to the JavaScript library DataTables that create interactive table on html page.\n\n\n\nProject Schedule\nBelow is an overview of our project timeline. For detailed list of task, please refer to gantt chart submitted.\n\n\nShow code\nplot(gc, event.label = \"Due\\n31 Mar\", event.time = \"2024-03-31\",\n     col.event=c(\"salmon\"),\n     col.done=c(\"#459397\"),\n     col.notdone=c(\"salmon\"),\n     main=\"Project Timeline\"\n     )\nlegend(\"topright\", pch=21, pt.cex=1, cex=0.7, pt.bg=c(\"#459397\", \"salmon\"),\n     border=\"black\",\n     legend=c(\"Completed\", \"In progress\"), bg=\"white\", xpd=TRUE)\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "G5_TSE/workingfile.html",
    "href": "G5_TSE/workingfile.html",
    "title": "workingfile",
    "section": "",
    "text": "Back to top"
  }
]