---
title: "Decoding Chaos in Colours"
subtitle: "Our Project Proposal"
date: "4 February 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
---

Authors: Imran, Suan Ern, Zachary Wong

![Image Source: University of Maryland](images/GTD%20Heatmap_2020_Thumb.png){fig-align="left"}

# Motivation

Terrorism, armed attacks, supremacist, etc have been making the headlines threathening uncertainty among the public and taking the loss of innocence. A good visual analysis of terrorist attacks is essential to (1) discover global terrorism trends, (2) unveil hidden relationships among terrorist in the network through their attacks and (3) ascertain the impact of fatalities and losses created.

The team aims to use open-source government data to provide free-to-use visualisation tools that is suitable especially for the Defence sector to develop effective combating strategies against terrorism.

# Objectives

The objective of the project is to:

1.  examine open-source government data on terrorist events worldwide and derive useful variables that affect the international terrorist incidents, and
2.  build a web-enabled interactive visual analytics application by using R Shiny based on World Terrorism Database.

# Data

The project will examine the Global Terrorism Database™ (GTD) from [University of Maryland](https://www.start.umd.edu/gtd){target="_blank"}. The dataset consist of XX variables and XX datapoints. The team intends to manipulate the dataset as follows:

1.  Create new columns........ to achieve..
2.  Filter dataset... to achieve..

# Methodology & Analytical Approach

For this project, the following approach will be taken by the team:

1.  **Data Preparation:** Clean the dataset by handling missing values, removing irrelevant variables, filtering variables and encoding categorical variables if necessary.

2.  **Exploratory Data Analysis via Data Visualisation Methods:** Analyse the dataset to understand the distribution of variables, identify patterns, and explore correlation between variables. Such as using:

    1.  Time-series bar/ line chart and bubble plot

    2.  Geospatial heatmaps and hotspot maps

3.  **Confirmatory Data Analysis via Statistical Methods:** Analyse the dataset using statistical testing tools to test hypotheses, evaluate the findings and arguments (e.g. strength of relationships between variables) and make statistical observations under uncertainty.

    1.  Correlation test:

        -   Correlation web plot, or

        -   Significant Test of Correlation: ggscatterstats()

    2.  Model Diagnostic: checking for multicollinearity

    3.  Model Diagnostic: checking normality assumption

    4.  Oneway ANOVA Test: ggbetweenstats() method

# Prototype

\<insert text\>

# R Packages

Our team intends to use the following R packages to run the R Shiny Application:

-   *tidyverse*: a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.

-   *knitr*: an report generation tool.

-   *dplyr*: an R tool for working with data frame (e.g. objects).

-   *ggstatsplot*: an extension of ggplot2 package for statistical visualisation and graphics creation.

-   *ggdist*: an R package that support visualisation of distribution and uncertainty.

-   *ggiraph:* for making ‘ggplot’ graphics interactive.

-   *plotly:* R library for plotting interactive statistical graphs.

-   *performance*: an R package used for assessment, comparison and testing of statistical models.

-   *parameters*: an R package used for processing parameters of various statistical models.

-   *RColorBrewer*: an R package that provide various colour schemes and colour palettes.

-   *patchwork*: an R package for preparing composite figure created using ggplot2.

-   *DT*: an R interface to the JavaScript library DataTables that create interactive table on html page.

# Project Schedule

Below is an overview of our project timeline. For detailed list of task, please refer to gantt chart submitted.

```{r}
#| echo: false
library(plan)
gc <-  read.gantt("data/grp5_ganttchartv2.csv")
```

```{r}
#| code-fold: true
#| code-summary: "Show code"

plot(gc, event.label = "Due\n31 Mar", event.time = "2024-03-31",
     col.event=c("salmon"),
     col.done=c("#459397"),
     col.notdone=c("salmon"),
     main="Project Timeline"
     )
legend("topright", pch=21, pt.cex=1, cex=0.7, pt.bg=c("#459397", "salmon"),
     border="black",
     legend=c("Completed", "In progress"), bg="white", xpd=TRUE)
```
